#!/usr/bin/env php
<?php

if ( ini_get('phar.readonly') == '1' ) {
    echo "usage: php -dphar.readonly=0 $argv[0]\n";
    exit(1);
}


define('ROOT_DIR', dirname(__DIR__));
define('BUILD_TARGET', ROOT_DIR . '/sugarcli.phar');

require ROOT_DIR . '/vendor/autoload.php';

use Symfony\Component\Finder\Finder;
use Symfony\Component\Process\Process;

// Remove path prefix and add to phar
function addFile($phar, $file)
{
    $path = str_replace( ROOT_DIR . '/', '', $file );
    $content = file_get_contents($file);
    print "addFile: $path = $file\n";

    // Remove shebang and set version.
    if ($path == 'bin/sugarcli') {
        $content = preg_replace('{^#!/usr/bin/env php\s*}', '', $content);

        $version = 'unknown dev';
        $process = new Process('git describe --tags HEAD', ROOT_DIR);
        $process->run();
        if ($process->isSuccessful()) {
            $version = trim($process->getOutput());
        }
        $content = str_replace('@sugarcli_version@', $version, $content);
    }

    $phar[$path] = $content;
}


// Remove existing phar file to rewrite it.
if (file_exists(BUILD_TARGET)) {
    unlink(BUILD_TARGET);
}

$phar = new \Phar(BUILD_TARGET, 0, 'sugarcli.phar');
$phar->startBuffering();

// Find and include all php files.
$finder = new Finder();
$finder->files()
    ->ignoreVCS(true)
    ->name('*.php')
    ->in(ROOT_DIR . '/src')
    ->in(ROOT_DIR . '/vendor/composer')
    ->in(ROOT_DIR . '/vendor/doctrine')
    ->in(ROOT_DIR . '/vendor/psr')
    ->in(ROOT_DIR . '/vendor/symfony');

foreach ($finder as $file) {
    addFile($phar, $file);
}

// Find and include all res files.
$finder = new Finder();
$finder->files()
    ->ignoreVCS(true)
    ->ignoreDotFiles(true)
    ->in(ROOT_DIR . '/res');

foreach ($finder as $file) {
    addFile($phar, $file);
}

// Add autoload and bin
addFile($phar, ROOT_DIR . '/vendor/autoload.php');
addFile($phar, ROOT_DIR . '/bin/sugarcli');

$phar->setStub( <<<EOB
#!/usr/bin/env php
<?php
Phar::mapPhar('sugarcli.phar');
include 'phar://sugarcli.phar/bin/sugarcli';
__HALT_COMPILER();
EOB
);

$phar->stopBuffering();

echo "Phar generated at " . BUILD_TARGET . "\n";

